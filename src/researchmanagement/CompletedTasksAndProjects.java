/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package researchmanagement;

import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import researchmanagement.models.Account;
import researchmanagement.models.Project;
import researchmanagement.models.Task;
import researchmanagement.tasks.ViewTask;

/**
 *
 * @author robert.watkin
 */
public class CompletedTasksAndProjects extends javax.swing.JFrame implements ActionListener {

     private Account loggedIn;
     private ArrayList<Project> projects;
     private ArrayList<Task> tasks;
     
    /**
     * Creates new form CompletedTasksAndProjects
     */
    public CompletedTasksAndProjects(Account loggedIn) {
        // If the dashboard is opened without a succesful login attempt
        if (loggedIn.getId() == -1){
            this.dispose();
        }
        
        initComponents();
        
        this.loggedIn = loggedIn;
        
        loadProjects();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        dashboardButton = new javax.swing.JButton();
        completedProjectsPanel = new javax.swing.JPanel();
        completedTasksPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(800, 460));
        setMinimumSize(new java.awt.Dimension(800, 460));

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setMaximumSize(new java.awt.Dimension(800, 200));
        jPanel1.setMinimumSize(new java.awt.Dimension(800, 0));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 10));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Completed Projects & Tasks");

        dashboardButton.setText("Dashboard");
        dashboardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dashboardButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 396, Short.MAX_VALUE)
                .addComponent(dashboardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dashboardButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        completedProjectsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Completed Projects"));
        completedProjectsPanel.setPreferredSize(new java.awt.Dimension(380, 0));
        completedProjectsPanel.setLayout(new javax.swing.BoxLayout(completedProjectsPanel, javax.swing.BoxLayout.Y_AXIS));

        completedTasksPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Completed Tasks"));
        completedTasksPanel.setLayout(new javax.swing.BoxLayout(completedTasksPanel, javax.swing.BoxLayout.Y_AXIS));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("You must select a project to see it's completted tasks");
        completedTasksPanel.add(jLabel2);

        jButton1.setText("View All Completed Tasks");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(completedProjectsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(completedTasksPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(completedProjectsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(completedTasksPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(0, 19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dashboardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dashboardButtonActionPerformed
        // open dashboard
        Dashboard d = new Dashboard(loggedIn);
        d.setVisible(true);

        this.dispose();
    }//GEN-LAST:event_dashboardButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CompletedTasksAndProjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CompletedTasksAndProjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CompletedTasksAndProjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CompletedTasksAndProjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CompletedTasksAndProjects(new Account(-1, null, null, null, null, null)).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel completedProjectsPanel;
    private javax.swing.JPanel completedTasksPanel;
    private javax.swing.JButton dashboardButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    private void loadProjects() {
        projects = new ArrayList<Project>();
        
        // Sql string
        String sqlGetProjects = "SELECT * FROM tbl_projects WHERE Status=?";
        
        // try catch to handle database querying
        try (Connection conn = Database.Connect();
                PreparedStatement ps = conn.prepareStatement(sqlGetProjects)){
            
            // add values to prepared statement
            ps.setString(1, "Signed Off");
            
            // Store results from query in a resultset
            ResultSet rs = ps.executeQuery();
            
            // loop through all results and store the project in the project list
            while (rs.next()){
                Project project = new Project(rs.getInt("ProjectID"), rs.getString("Name"), rs.getString("Status"), rs.getInt("CustomerID"), rs.getInt("HeadResearcherID"));
                projects.add(project);
            }
            
            // close resultset and preparedstatment
            rs.close();
        } catch (Exception e){
            // display error message
            JOptionPane.showMessageDialog(this,"An error has occured!\n\n" + e);
 
            // relaunch login page
            Dashboard d = new Dashboard(loggedIn);
            d.setVisible(true);
            this.dispose();
        }
        
        // clear the panel
        completedProjectsPanel.removeAll();
        System.out.println(projects.size() + " projects found");

        if (projects.size() == 0){
            JLabel notice = new JLabel("There are currently 0 projects for this customer");
            completedProjectsPanel.add(notice);
        } else {
            for(Project project : projects){
                // create a new row
                JPanel row = new JPanel(new GridLayout(1,2));
                row.setMaximumSize(new Dimension(500,30));              


                // name label to hold the customers name
                JLabel name = new JLabel(project.getName(), SwingConstants.LEFT);
                name.setSize(200, 20);

                // Button to select the account
                JButton select = new JButton("Select");
                select.setActionCommand(Integer.toString(project.getId()));
                select.addActionListener(this);

                row.add(name);
                row.add(select);
                completedProjectsPanel.add(row);
            }
        }
        completedProjectsPanel.validate();
        completedProjectsPanel.repaint();
        completedProjectsPanel.setVisible(true);  
    }

    @Override
    public void actionPerformed(ActionEvent ae) {
        String action = ae.getActionCommand();
        System.out.println("Button pressed");

        int val = Integer.parseInt(action);
        System.out.println(val);
        
        if (val > 0){
            tasks = new ArrayList<Task>();

            String sqlGetTasks = "SELECT * FROM tbl_tasks WHERE ProjectID=?";


            try (Connection conn = Database.Connect();
                    PreparedStatement ps = conn.prepareStatement(sqlGetTasks)){

                ps.setInt(1, val);
                ResultSet rs = ps.executeQuery();

                while (rs.next()){
                    Task task = new Task(rs.getInt("TaskID"), rs.getString("Name"), rs.getString("Status"),rs.getInt("ProjectID"), rs.getInt("AccountID"));
                    tasks.add(task);
                }

            } catch (SQLException ex) {
                 JOptionPane.showMessageDialog(this, "There has been an error retrieving tasks for this project\n\nPlease try again!");
            }

            // clear the panel
            completedTasksPanel.removeAll();
            System.out.println(tasks.size() + " tasks found");

            // if there are 0 tasks
            if (tasks.isEmpty()){
                // Display 0 tasks to the user
                JLabel notice = new JLabel("There are 0 tasks for this project");
                completedTasksPanel.add(notice);
            } else {
                // Loop through all tasks
                for(Task task : tasks){
                    // create a new row
                    JPanel row = new JPanel(new GridLayout(1,2));
                    row.setMaximumSize(new Dimension(500,30));              


                    // name label to hold the accounts name
                    JLabel name = new JLabel(task.getName(), SwingConstants.LEFT);
                    name.setSize(200, 20);

                    // Button to select the account
                    JButton view = new JButton("View");
                    view.setActionCommand("-"+task.getId());
                    view.addActionListener(this);

                    // Add elements to the row
                    row.add(name);
                    row.add(view);
                    completedTasksPanel.add(row);
                }
            }
            // Refresh the panel holding the tasks
            completedTasksPanel.validate();
            completedTasksPanel.repaint();
            completedTasksPanel.setVisible(true);
        } else {
            int taskId = val*-1;

            ViewTask vt = new ViewTask(loggedIn, taskId);
            this.dispose();
        }
        
    }
}