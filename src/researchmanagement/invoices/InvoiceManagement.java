/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package researchmanagement.invoices;

import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import researchmanagement.Dashboard;
import researchmanagement.Database;
import researchmanagement.Login;
import researchmanagement.models.Account;
import researchmanagement.models.Invoice;
import researchmanagement.models.Project;

/**
 *
 * @author robert.watkin
 */
public class InvoiceManagement extends javax.swing.JFrame implements ActionListener{

    private Account loggedIn;
    private Invoice selectedInvoice;
    private ArrayList<Invoice> invoices;
    
    /**
     * Creates new form AccountManagement
     */
    public InvoiceManagement(Account loggedIn) {
        if (loggedIn.getId() == -1){
            this.dispose();
        }
        initComponents();
        
        this.loggedIn = loggedIn;
        
        loadInvoices();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        dashboardButton = new javax.swing.JButton();
        allInvoicesPanel = new javax.swing.JPanel();
        newInvoiceButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        invoiceIdLabel = new javax.swing.JLabel();
        customerIdLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        customerNameLabel = new javax.swing.JLabel();
        projectIdLabel = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        projectNameLabel = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        amountOwedLabel = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        amountPaidLabel = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        paymentScheduleLabel = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        editInvoiceButton = new javax.swing.JButton();
        deleteInvoiceButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(800, 470));
        setMinimumSize(new java.awt.Dimension(800, 470));
        setPreferredSize(new java.awt.Dimension(800, 470));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setMaximumSize(new java.awt.Dimension(600, 200));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Invoice Management");

        dashboardButton.setText("Dashboard");
        dashboardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dashboardButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(467, 467, 467)
                .addComponent(dashboardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dashboardButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        allInvoicesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("All Invoices"));
        allInvoicesPanel.setMaximumSize(new java.awt.Dimension(371, 344));
        allInvoicesPanel.setMinimumSize(new java.awt.Dimension(371, 344));
        allInvoicesPanel.setPreferredSize(new java.awt.Dimension(371, 344));
        allInvoicesPanel.setLayout(new javax.swing.BoxLayout(allInvoicesPanel, javax.swing.BoxLayout.Y_AXIS));

        newInvoiceButton.setText("New Invoice");
        newInvoiceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newInvoiceButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Invoice ID");

        invoiceIdLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        invoiceIdLabel.setText("null");

        customerIdLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        customerIdLabel.setText("null");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Customer ID");

        dateLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        dateLabel.setText("null");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Date");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setText("Customer Name");

        customerNameLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        customerNameLabel.setText("null");

        projectIdLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        projectIdLabel.setText("null");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel15.setText("Project ID");

        projectNameLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        projectNameLabel.setText("null");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel17.setText("Project Name");

        amountOwedLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        amountOwedLabel.setText("null");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel19.setText("Amount Owed");

        amountPaidLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        amountPaidLabel.setText("null");

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel21.setText("Amount Paid");

        paymentScheduleLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        paymentScheduleLabel.setText("null");

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel23.setText("Payment Schedule");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(customerIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(invoiceIdLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customerNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(projectIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(projectNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(paymentScheduleLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(amountOwedLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(amountPaidLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(invoiceIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(customerIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(customerNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(projectIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(projectNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(amountOwedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(amountPaidLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(paymentScheduleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        editInvoiceButton.setText("Edit");
        editInvoiceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editInvoiceButtonActionPerformed(evt);
            }
        });

        deleteInvoiceButton.setText("Delete");
        deleteInvoiceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteInvoiceButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newInvoiceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(allInvoicesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(editInvoiceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(144, 144, 144)
                        .addComponent(deleteInvoiceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(allInvoicesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newInvoiceButton)
                    .addComponent(editInvoiceButton)
                    .addComponent(deleteInvoiceButton))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dashboardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dashboardButtonActionPerformed
        // Open dashboard
        Dashboard d = new Dashboard(loggedIn);
        d.setVisible(true);
        
        this.dispose();
    }//GEN-LAST:event_dashboardButtonActionPerformed

    private void editInvoiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editInvoiceButtonActionPerformed
        // Check if an account has been selected
        if (selectedInvoice == null){
            JOptionPane.showMessageDialog(this, "You must select an invoice to delete it.\n\nPlease try again");
            return;
        }
        
        EditInvoice ei = new EditInvoice(loggedIn, selectedInvoice);
        ei.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_editInvoiceButtonActionPerformed

    private void deleteInvoiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteInvoiceButtonActionPerformed
        // Check if an account has been selected
        if (selectedInvoice == null){
            JOptionPane.showMessageDialog(this, "You must select an invoice to delete it.\n\nPlease try again");
            return;
        }
        
        // Get confirmation from the user to delete the account
        int reply = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this invoice?\n\nThis cannot be undone!", "Warning!", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            try {
                // Sql string to delete account
                String sqlDeleteInvoice = "DELETE FROM tbl_invoices WHERE InvoiceID=?";

                // establish DB connection
                Connection conn = Database.Connect();

                // Create a prepared statement to delete the account
                PreparedStatement ps = conn.prepareStatement(sqlDeleteInvoice);
                ps.setInt(1, selectedInvoice.getId());

                // run the sql
                ps.executeUpdate();
                JOptionPane.showMessageDialog(this, "The invoice has been deleted successfully");
            } catch (Exception e){
                e.printStackTrace();
            }
        }
        loadInvoices();
    }//GEN-LAST:event_deleteInvoiceButtonActionPerformed

    private void newInvoiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newInvoiceButtonActionPerformed
        // open new invoice page
        NewInvoice ni = new NewInvoice(loggedIn);
        this.dispose();
    }//GEN-LAST:event_newInvoiceButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InvoiceManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InvoiceManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InvoiceManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InvoiceManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InvoiceManagement(new Account(-1, null, null, null, null, null)).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel allInvoicesPanel;
    private javax.swing.JLabel amountOwedLabel;
    private javax.swing.JLabel amountPaidLabel;
    private javax.swing.JLabel customerIdLabel;
    private javax.swing.JLabel customerNameLabel;
    private javax.swing.JButton dashboardButton;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JButton deleteInvoiceButton;
    private javax.swing.JButton editInvoiceButton;
    private javax.swing.JLabel invoiceIdLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton newInvoiceButton;
    private javax.swing.JLabel paymentScheduleLabel;
    private javax.swing.JLabel projectIdLabel;
    private javax.swing.JLabel projectNameLabel;
    // End of variables declaration//GEN-END:variables

    private void loadInvoices() {
        // Refresh/create array list to store all invoices
        invoices = new ArrayList<Invoice>();
        
        // Sql string
        String sqlGetAccounts = "SELECT * FROM tbl_invoices";
        
        // try catch to handle database querying
        try (Connection conn = Database.Connect();
                PreparedStatement ps = conn.prepareStatement(sqlGetAccounts)){
            
            // Store results from query in a resultset
            ResultSet rs = ps.executeQuery();
            
            // loop through all results and store the invoice in the invoice list
            while (rs.next()){
                Invoice invoice = new Invoice(rs.getInt("InvoiceID"), rs.getInt("CustomerID"), rs.getInt("ProjectID"), rs.getString("Date"),  rs.getString("AmountPaid"), rs.getString("AmountOwed"),rs.getString("PaymentSchedule"));
                invoices.add(invoice);
            }
            
            // close resultset and preparedstatment
            rs.close();
        } catch (Exception e){
            // display error message
            JOptionPane.showMessageDialog(this,"An error has occured!\n\n" + e);
 
            // relaunch login page
            Login l = new Login();
            l.setVisible(true);
            this.dispose();
        }
        
        // clear the panel
        allInvoicesPanel.removeAll();
        System.out.println(invoices.size() + " accounts found");

        if (invoices.size() == 0){
            JLabel notice = new JLabel("There are currently 0 projects for this customer");
            allInvoicesPanel.add(notice);
        } else {
            for(Invoice invoice : invoices){
                // create a new row
                JPanel row = new JPanel(new GridLayout(1,2));
                row.setMaximumSize(new Dimension(500,30));              


                // name label to hold the customers name
                JLabel name = new JLabel("Invoice ID: " + invoice.getId() + "; Date: " + invoice.getDate(), SwingConstants.LEFT);
                name.setSize(200, 20);

                // Button to select the account
                JButton select = new JButton("Select");
                select.setActionCommand(Integer.toString(invoice.getId()));
                select.addActionListener(this);

                row.add(name);
                row.add(select);
                allInvoicesPanel.add(row);
            }
        }
        allInvoicesPanel.validate();
        allInvoicesPanel.repaint();
        allInvoicesPanel.setVisible(true);   
    }

    @Override
    public void actionPerformed(ActionEvent ae) {
        String action = ae.getActionCommand();
        System.out.println("Button pressed");

        // SQL string
        String sqlGetInvoice = "SELECT * FROM tbl_invoices WHERE InvoiceID=?";

        try (Connection conn = Database.Connect();
            PreparedStatement ps = conn.prepareStatement(sqlGetInvoice)){
            int accountId = Integer.parseInt(action);

            ps.setInt(1, accountId);

            ResultSet rs = ps.executeQuery();

            if (rs.next()){
                selectedInvoice = new Invoice(rs.getInt("InvoiceID"), rs.getInt("CustomerID"), rs.getInt("ProjectID"), rs.getString("Date"),  rs.getString("AmountPaid"), rs.getString("AmountOwed"),rs.getString("PaymentSchedule"));
            } else{
                JOptionPane.showMessageDialog(this, "There has been a problem retrieving this account\n\nPlease try again");
            }

            // close resultset
            rs.close();
        } catch (Exception e){
            // display error message
            JOptionPane.showMessageDialog(this,"An error has occured!\n\n" + e);

            // relaunch login page
            Login l = new Login();
            l.setVisible(true);
            this.dispose();
        }   
        
        // SQL string
        String sqlGetCustomer = "SELECT * FROM tbl_customers WHERE CustomerID=?";
        String customerName = "";
        
        try (Connection conn = Database.Connect();
            PreparedStatement ps = conn.prepareStatement(sqlGetCustomer)){

            ps.setInt(1, selectedInvoice.getCustomerId());

            ResultSet rs = ps.executeQuery();

            if (rs.next()){
                customerName = rs.getString("FirstName") + " " + rs.getString("LastName");
            } else{
                JOptionPane.showMessageDialog(this, "There has been a problem retrieving customer details\n\nPlease try again");
            }

            // close resultset
            rs.close();
        } catch (Exception e){
            // display error message
            JOptionPane.showMessageDialog(this,"An error has occured!\n\n" + e);

            // relaunch login page
            Login l = new Login();
            l.setVisible(true);
            this.dispose();
        }   
        
        // SQL string
        String sqlGetProject = "SELECT * FROM tbl_projects WHERE ProjectID=?";
        String projectName = "";
        
        try (Connection conn = Database.Connect();
            PreparedStatement ps = conn.prepareStatement(sqlGetProject)){

            ps.setInt(1, selectedInvoice.getProjectId());

            ResultSet rs = ps.executeQuery();

            if (rs.next()){
                projectName = rs.getString("Name");
            } else{
                JOptionPane.showMessageDialog(this, "There has been a problem retrieving project details\n\nPlease try again");
            }

            // close resultset
            rs.close();
        } catch (Exception e){
            // display error message
            JOptionPane.showMessageDialog(this,"An error has occured!\n\n" + e);

            // relaunch login page
            Login l = new Login();
            l.setVisible(true);
            this.dispose();
        }   
        
        // display values on screen
        this.invoiceIdLabel.setText(String.valueOf(selectedInvoice.getId()));
        this.dateLabel.setText(selectedInvoice.getDate());
        this.customerIdLabel.setText(String.valueOf(selectedInvoice.getCustomerId()));
        this.customerNameLabel.setText(customerName);
        this.projectIdLabel.setText(String.valueOf(selectedInvoice.getProjectId()));
        this.projectNameLabel.setText(projectName);
        this.amountOwedLabel.setText(selectedInvoice.getAmountOwed());
        this.amountPaidLabel.setText(selectedInvoice.getAmountPaid());
        this.paymentScheduleLabel.setText(selectedInvoice.getPaymentSchedule());
    }
}
